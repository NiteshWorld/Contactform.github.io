{"version":3,"sources":["reportWebVitals.js","Contact.js","Form.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Contact","name","value","useState","email","phone","messages","user","setUser","handleInputs","e","console","log","target","PostData","a","preventDefault","fetch","method","headers","body","JSON","stringify","res","json","data","status","window","alert","type","placeholder","autoComplete","Fullname","onChange","required","cols","rows","onClick","Form","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4CC6FCQ,G,MA7FC,WA8BZ,IAIIC,EAAMC,EAJV,EAAwBC,mBAAS,CAC7BF,KAAM,GAAIG,MAAO,GAAIC,MAAO,GAAIC,SAAU,KAD9C,mBAAOC,EAAP,KAAaC,EAAb,KAKMC,EAAe,SAACC,GAClBC,QAAQC,IAAIF,GACZT,EAAOS,EAAEG,OAAOZ,KAChBC,EAAQQ,EAAEG,OAAOX,MAEjBM,EAAQ,2BAAKD,GAAN,kBAAaN,EAAOC,MAGzBY,EAAQ,uCAAG,WAAOJ,GAAP,yBAAAK,EAAA,6DACbL,EAAEM,iBACMf,EAAiCM,EAAjCN,KAAMG,EAA2BG,EAA3BH,MAAOC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAFf,SAIKW,MAAM,WAAY,CAChCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAEjBrB,OAAMG,QAAOC,QAAOC,eAXf,cAIPiB,EAJO,gBAeMA,EAAIC,OAfV,OAgBO,OADdC,EAfO,QAgBJC,QAAmBD,EAKxBE,OAAOC,MAAM,4BAJbD,OAAOC,MAAM,+BAjBJ,2CAAH,sDA8Bd,OAAO,qCACH,4CACA,uBAAMV,OAAO,OAAb,cAAsB,mCAClB,0CADkB,IACG,uBACrB,uBAAOW,KAAK,OAAOC,YAAY,kBAAkBC,aAAa,MAAM9B,KAAK,OAAOC,MAAOK,EAAKyB,SAAUC,SAAUxB,EAAcyB,UAAQ,IAFpH,IAEwH,uBAC1I,2CAHkB,IAGI,uBACtB,uBAAOL,KAAK,QAAQC,YAAY,mBAAmBC,aAAa,MAAM9B,KAAK,QAAQC,MAAOK,EAAKH,MAAO6B,SAAUxB,EAAcyB,UAAQ,IAJpH,IAIwH,uBAC1I,mDALkB,IAKY,uBAC9B,uBAAOL,KAAK,SAASC,YAAY,oBAAoBC,aAAa,MAAM9B,KAAK,QAAQC,MAAOK,EAAKF,MAAO4B,SAAUxB,EAAcyB,UAAQ,IANtH,IAM0H,uBAC5I,+CAPkB,IAOQ,uBAC1B,0BAAUC,KAAK,KAAKC,KAAK,IAAIL,aAAa,MAAM9B,KAAK,WAAWC,MAAOK,EAAKD,SAAU2B,SAAUxB,EAAcqB,YAAY,uBARxG,IAQ0I,uBAC5J,uBAAOD,KAAK,SAASQ,QAASvB,EAAUZ,MAAM,SAT5B,UAFnB,SCnEIoC,EAVF,WAGT,OACI,mCACA,cAAC,EAAD,OCARC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.834c4653.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\r\n\r\nimport './Contact.css';\r\n\r\n\r\n// class Contact extends Component {\r\n\r\nconst Contact = () => {\r\n\r\n\r\n\r\n\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state = {Fullname : \"\",\r\n    //                   email : \"\",\r\n    //                   phone : \"\",\r\n    //                   messages : \"\"\r\n\r\n    // }\r\n    // }\r\n\r\n    // handlechangeall = (e) => {\r\n    //     this.setState({ [e.target.name] : e.target.value })\r\n\r\n    // }\r\n\r\n    // handlesubmit = (e) => {\r\n    //     // alert (`my name is ${this.state.Fullname} my email id is ${this.state.email} and number is ${this.state.mobile} and messages is ${this.state.messages}`);\r\n    //     alert(JSON.stringify(this.state))\r\n    //     e.preventDefault();\r\n    // }\r\n\r\n\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\", email: \"\", phone: \"\", messages: \"\"\r\n    });\r\n\r\n    let name, value;\r\n    const handleInputs = (e) => {\r\n        console.log(e);\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n\r\n        setUser({ ...user, [name]: value });\r\n    }\r\n\r\n    const PostData = async (e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone, messages } = user;\r\n\r\n        const res = await fetch(\"/contact\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                name, email, phone, messages\r\n\r\n            })\r\n        });\r\n        const data = await res.json();\r\n        if (data.status === 422 || !data) {\r\n            window.alert(\"ples fill the form properly\");\r\n            //    console.log(\"Please proper fill form\");\r\n\r\n        } else {\r\n            window.alert(\"Thank You for Contact Us\");\r\n            // console.log(\"Thank You for Contact Us\");\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // render() {\r\n    return <>\r\n        <h1>Contact Us</h1>\r\n        <form method=\"POST\" > <center>\r\n            <label>Name </label> <br />\r\n            <input type=\"text\" placeholder='Enter your Name' autoComplete='off' name=\"name\" value={user.Fullname} onChange={handleInputs} required /> <br />\r\n            <label> Email</label> <br />\r\n            <input type=\"email\" placeholder='Enter your email' autoComplete='off' name=\"email\" value={user.email} onChange={handleInputs} required /> <br />\r\n            <label> Mobile Number</label> <br />\r\n            <input type=\"number\" placeholder='Enter your number' autoComplete='off' name=\"phone\" value={user.phone} onChange={handleInputs} required /> <br />\r\n            <label> Messages </label> <br />\r\n            <textarea cols=\"83\" rows=\"4\" autoComplete='off' name=\"messages\" value={user.messages} onChange={handleInputs} placeholder='Enter your Quaries' ></textarea> <br />\r\n            <input type=\"submit\" onClick={PostData} value=\"send\" /> </center>\r\n\r\n\r\n        </form> </>\r\n    // }\r\n\r\n}\r\n\r\n\r\nexport default Contact;\r\n\r\n","import React, {useState} from 'react';\r\nimport Contact from './Contact';\r\n\r\nconst Form = () => {\r\n\r\n    \r\n    return (\r\n        <> \r\n        <Contact />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Contact from './Contact';\nimport Form from './Form';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Form />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}